// Each new term in the Fibonacci sequence is generated by
//  adding the previous two terms. By starting with 1 and 2,
//   the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values
//  do not exceed four million, find the sum of the even-valued terms.

var fib = function(ceil){
  // set the first 2 values
  var fibArray = [0, 1];

  // declare the value we will test so as not to exceed the limit (in the euler case, 4 million)
  var val = 0;
  // declare counter for while loop. Starts at 2 since we've declared fibArray[0] & fibArray[1]
  var counter = 2;
  while ( val < ceil ) {
    // basic fibonacci recursive formula
    fibArray[counter] = fibArray[counter-2] + fibArray[counter-1];
    // set the value for the ceiling check to the next fibonacci number, so the funciton won't add anything to the array above the ceiling
    val = fibArray[counter] + fibArray[counter-1];
    // increase the counter for the next index in fibArray
    counter += 1;
  };

  return fibArray;
}